name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Set up CUDA
        uses: Jimver/cuda-toolkit@v0.2.11
        id: cuda-toolkit
        with:
          cuda: '12.0.0'
          method: 'network'
          sub-packages: '["nvcc", "cudart", "cublas", "cufft"]'
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libboost-all-dev
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      
      - name: Build project
        run: |
          ./build.sh
      
      - name: Run tests
        run: |
          cd tests
          python -m pytest -xvs

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff mypy black

      - name: Lint Python code
        run: |
          ruff check .
          black --check .
          mypy src
      
      - name: Lint C++ code
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
          find src -name "*.cpp" -o -name "*.hpp" -o -name "*.cu" -o -name "*.cuh" | xargs clang-format --dry-run --Werror

  docker:
    runs-on: ubuntu-latest
    needs: [build, lint]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push benchmark Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./containers/benchmark.Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/benchmark:latest
            ghcr.io/${{ github.repository }}/benchmark:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max